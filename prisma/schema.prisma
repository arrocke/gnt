generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id       Int       @default(autoincrement()) @id
  name     String    @unique
  chapters Chapter[]
}

model Case {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String @default("")
  words       Word[]
}

model Chapter {
  id     Int     @default(autoincrement()) @id
  number Int
  bookId Int
  book   Book    @relation(fields: [bookId], references: [id])
  verses Verse[]

  @@unique([bookId, number], name: "Chapter_bookId_number_key")
}

model Degree {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String @default("")
  words       Word[]
}

model Gender {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String @default("")
  words       Word[]
}

model Lemma {
  id          Int     @default(autoincrement()) @id
  title       String  @unique
  fullLemma   String  @unique
  words       Word[]
  strongs     Int?    @unique
  brief       String?
  description String?
}

model Mood {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String @default("")
  words       Word[]
}

model Number {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String @default("")
  words       Word[]
}

model Person {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String @default("")
  words       Word[]
}

model Speech {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String
  words       Word[]
}

model Tense {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String @default("")
  words       Word[]
}

model Verse {
  id        Int     @default(autoincrement()) @id
  number    Int
  chapterId Int
  chapter   Chapter @relation(fields: [chapterId], references: [id])
  words     Word[]
  text      Text[]

  @@unique([chapterId, number], name: "Verse_chapterId_number_key")
}

model Voice {
  id          Int    @default(autoincrement()) @id
  description String @unique
  code        String @default("")
  words        Word[]
}

model Word {
  id         Int     @default(autoincrement()) @id
  code       String
  text       String
  word       String
  normalized String
  lemmaId    Int
  speechId   Int
  personId   Int?
  tenseId    Int?
  voiceId    Int?
  moodId     Int?
  caseId     Int?
  numberId   Int?
  genderId   Int?
  degreeId   Int?
  verseId    Int
  speech     Speech  @relation(fields: [speechId], references: [id])
  case       Case?   @relation(fields: [caseId], references: [id])
  person     Person? @relation(fields: [personId], references: [id])
  degree     Degree? @relation(fields: [degreeId], references: [id])
  gender     Gender? @relation(fields: [genderId], references: [id])
  lemma      Lemma   @relation(fields: [lemmaId], references: [id])
  mood       Mood?   @relation(fields: [moodId], references: [id])
  number     Number? @relation(fields: [numberId], references: [id])
  tense      Tense?  @relation(fields: [tenseId], references: [id])
  verse      Verse   @relation(fields: [verseId], references: [id])
  voice      Voice?  @relation(fields: [voiceId], references: [id])
}

model Text {
  id      Int    @id
  verseId Int
  text    String
  lemma   String
  speech  String
  parsing String

  verse   Verse   @relation(fields: [verseId], references: [id])
}
